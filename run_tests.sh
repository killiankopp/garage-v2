#!/bin/bash

# Script pour lancer les tests unitaires
# Usage: ./run_tests.sh [test_name]

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üß™ Lancement des tests unitaires...${NC}"
echo ""

# Fonction pour afficher le r√©sultat
show_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Tests $2 : SUCC√àS${NC}"
    else
        echo -e "${RED}‚ùå Tests $2 : √âCHEC${NC}"
        return 1
    fi
}

# Si un test sp√©cifique est demand√©
if [ ! -z "$1" ]; then
    echo -e "${YELLOW}Ex√©cution du test sp√©cifique: $1${NC}"
    platformio test -e native -f $1
    exit $?
fi

# Variables pour compter les r√©sultats
total_tests=0
failed_tests=0

# Liste des tests √† ex√©cuter
tests=("test_basic" "test_logic")

for test in "${tests[@]}"; do
    echo -e "${YELLOW}Ex√©cution de: $test${NC}"
    platformio test -e native -f $test
    result=$?
    show_result $result $test
    
    ((total_tests++))
    if [ $result -ne 0 ]; then
        ((failed_tests++))
    fi
    echo ""
done

# R√©sum√© final
echo -e "${BLUE}===========================================${NC}"
echo -e "${BLUE}R√©sum√© des tests${NC}"
echo -e "${BLUE}===========================================${NC}"
echo -e "Total des tests: $total_tests"

if [ $failed_tests -eq 0 ]; then
    echo -e "${GREEN}Tests r√©ussis: $total_tests${NC}"
    echo -e "${GREEN}Tests √©chou√©s: 0${NC}"
    echo -e "${GREEN}üéâ Tous les tests sont pass√©s avec succ√®s !${NC}"
    exit 0
else
    echo -e "${GREEN}Tests r√©ussis: $((total_tests - failed_tests))${NC}"
    echo -e "${RED}Tests √©chou√©s: $failed_tests${NC}"
    echo -e "${RED}‚ùå Certains tests ont √©chou√©${NC}"
    exit 1
fi